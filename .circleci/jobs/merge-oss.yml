---
executor: go
parameters:
  origin_branch:
    type: string
    default: master
  dest_branch:
    type: string
    default: master
steps:
  - run:
      name: prepare initial failing reason
      command: |
        # FAIL_REASON is used in the slack message below.
        # We don't add a custom reason for every case, just the common ones.
        echo "export FAIL_REASON='for an unknown reason, @mahmood please investigate: $CIRCLE_BUILD_URL'" >> $BASH_ENV

  - add_ssh_keys:
      fingerprints:
      # "CircleCI SSH Checkout" SSH key associated with hashicorp-ci GitHub user
      - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"
  - checkout
  - run: apt-get update; apt-get install -y sudo
  - install-circleci-local-cli
  - run:
      name: Merge OSS branch
      command: |
        set -eux -o pipefail
        #
        # Configure Git
        git config --global user.email "hashicorp-ci@users.noreply.github.com"
        git config --global user.name "hashicorp-ci"

        # fetch latest destination branch - to support oss->ent propagation through rebuilds
        git pull origin << parameters.dest_branch >>

        # Merge OSS master branch to Enterprise merge branch
        git remote add oss https://github.com/hashicorp/nomad.git
        git fetch oss
        git_merge_branch="ci/oss-merge-<< parameters.origin_branch >>-$(date +%Y%m%d%H%M%S)"

        git checkout -b "${git_merge_branch}"
        latest_oss_commit="$(git rev-parse oss/<< parameters.origin_branch >>)"
        message="Merge Nomad OSS branch '<< parameters.origin_branch >>' at commit ${latest_oss_commit}"
        if ! git merge -m "$message" oss/<< parameters.origin_branch >>; then
          # try to merge common conflicting files
          git status
          git checkout --theirs CHANGELOG.md
          git checkout --theirs version/version.go
          git checkout --theirs command/agent/bindata_assetfs.go
          git checkout --theirs .circleci/config.yml
          git checkout --ours   vendor/modules.txt
          git checkout --ours   go.sum
          make sync

          # Regenerate enterprise CircleCI config to apply changes from OSS merge
          make -C .circleci CIRCLECI="circleci-local-cli --skip-update-check" config.yml

          git add CHANGELOG.md version/version.go command/agent/bindata_assetfs.go go.sum vendor/modules.txt .circleci/config.yml

          # attempt merging again
          if ! git commit -m "$message"; then
            echo "export FAIL_REASON='because git was unable to auto-merge'" >> $BASH_ENV
            exit 1
          fi
        fi

        # quick check - do basic compile build
        if ! make pkg/linux_amd64/nomad ; then
          echo "export FAIL_REASON='because nomad failed to compile after auto-merge'" >> $BASH_ENV
          exit 1
        fi

        # now merge and push
        git checkout << parameters.dest_branch >>
        git merge "${git_merge_branch}"
        git push origin << parameters.dest_branch >>

  - slack/status:
      webhook: $SLACK_WEBHOOK_OSS_ENT_AUTOMERGE
      ## only notify on failing builds to avoid spamming now
      fail_only: true
      failure_message: >
        :red_circle: The Nomad OSS -> ENT merge failed today $FAIL_REASON.
      success_message: >
        :tada: The Nomad OSS -> ENT merge just happened automatically.
