name: Merge OSS to ENT
on:
  # Allow this Action to be triggered by other Actions.
  workflow_call:
    inputs:
      origin_branch:
        description: 'The source OSS branch'
        type: string
        required: true
      dest_branch:
        description: 'The destination ENT branch'
        type: string
        required: true
    secrets:
      NOMAD_MERGE_OSS_GH_PAT:
        description: 'The GitHub Personal Access Token to use for the merge commit'
        required: true
      NOMAD_MERGE_OSS_SLACK:
        description: 'The Slack app incoming webhook URL to use for notification'
        required: true
env:
  GOPRIVATE: github.com/hashicorp
  GITHUB_USER: hc-github-team-nomad-core
jobs:
  merge-oss:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    outputs:
      reason: ${{ steps.merge.outputs.reason }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.dest_branch }}
          fetch-depth: 0
          token: ${{ secrets.NOMAD_MERGE_OSS_GH_PAT }}
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "::set-output name=go-version::$(cat .go-version)"
      - uses: magnetikonline/action-golang-cache@v2
        with:
          go-version: ${{ steps.get-go-version.outputs.go-version }}
          cache-key-suffix: -${{ inputs.origin_branch }}-${{ inputs.dest_branch }}-merge-oss
      - name: Configure Git
        run: |
          git config --global url.'https://${{ secrets.NOMAD_MERGE_OSS_GH_PAT }}@github.com'.insteadOf 'https://github.com'
          git config --global user.email "github-team-nomad-core@hashicorp.com"
          git config --global user.name "@${{ env.GITHUB_USER }}"
      - name: Run Script
        id: merge
        run: |
          set -xeuo pipefail

          # Add OSS repo and fetch origin branch
          git remote add oss https://github.com/hashicorp/nomad.git
          git fetch oss ${{ inputs.origin_branch }}

          # Get branch names and commit SHAs
          origin_branch="${{ inputs.origin_branch }}"
          origin_sha="$(git rev-parse --short oss/${origin_branch})"
          dest_branch="${{ inputs.dest_branch }}"
          dest_sha="$(git rev-parse --short ${dest_branch})"
          tmp_branch="ci/oss-merge-${origin_branch}-$(date -u +%Y%m%d%H%M%S)"


          # Print job summary
          echo "Merging OSS branch '${origin_branch}' into ENT branch '${dest_branch}'"
          cat << EOF >> $GITHUB_STEP_SUMMARY
          Merging OSS branch \`${origin_branch}\` into ENT branch \`${dest_branch}\`

          | Source branch                                                                                   | Destination branch                                                                                 | Go version                                     |
          | ----------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- | ---------------------------------------------- |
          | ${origin_branch} ([\`${origin_sha}\`](https://github.com/hashicorp/nomad/commit/${origin_sha})) | ${dest_branch} ([\`$dest_sha\`](https://github.com/hashicorp/nomad-enterprise/commit/${dest_sha})) | ${{ steps.get-go-version.outputs.go-version }} |

          EOF

          # Protect against dest_branch being different from current branch
          git checkout "${dest_branch}"
          git pull

          # Run the merge script
          echo "::group::Run merge script"
          if ! ./scripts/enterprise/merge-oss.sh "${origin_branch}" "${dest_branch}" "${tmp_branch}" ; then
            echo "::error::git was unable to auto-merge"
            echo "::set-output name=reason::git was unable to auto-merge"
            exit 1
          fi
          echo "::endgroup::"

          echo "::group::Verify merge"
          # Install dependencies after merge to make sure we install the right
          # set of tools that may have been update
          make deps lint-deps

          # Spot check by doing make check
          if ! make check ; then
            echo "::error::make check failed after auto-merge"
            echo "::set-output name=reason::'make check' failed after auto-merge"
            exit 1
          fi

          # Spot check by doing compile
          if ! make pkg/linux_amd64/nomad ; then
            echo "::error::compilation failed after auto-merge"
            echo "::set-output name=reason::compilation failed after auto-merge"
            exit 1
          fi
          echo "::endgroup::"

          echo "::group::Merge and push"
          # Finally merge
          git checkout "${dest_branch}"
          git merge "${tmp_branch}"

          # And then push
          if ! git push origin "${dest_branch}" ; then
            echo "::error::push to origin failed"
            echo "::set-output name=reason::push to origin failed"
            exit 1
          fi
          echo "::endgroup::"

          # Say goodbye
          echo ":green_circle: Merge completed successfully" >> $GITHUB_STEP_SUMMARY
          exit 0
  handle-failure:
    needs:
      - merge-oss
    if: always() && needs.merge-oss.result == 'failure'
    runs-on: ubuntu-20.04
    steps:
      - name: Generate failure summary
        run: |
          origin_branch="${{ inputs.origin_branch }}"
          dest_branch="${{ inputs.dest_branch }}"
          tmp_branch="ci/oss-merge-${{ inputs.origin_branch }}-$(date -u +%Y%m%d%H%M%S)"

          cat << EOF >> $GITHUB_STEP_SUMMARY
            :x: Merge of OSS branch \`${{ inputs.origin_branch }}\` into ENT \`${{ inputs.dest_branch }}\` failed

            Please run the following commands in the \`hashicorp/nomad-enterprise\` repo to manually fix the conflicts:

            \`\`\`bash
            git checkout "${dest_branch}"
            git pull
            ./scripts/enterprise/merge-oss.sh "${origin_branch}" "${dest_branch}" "${tmp_branch}"

            # Fix merge conflicts

            git add -A
            git commit

            # Save commit message file

            git push origin "${tmp_branch}"
            \`\`\`

            Then open the a PR at https://github.com/hashicorp/nomad-enterprise/compare/${dest_branch}...${tmp_branch}?expand=1
          EOF
      - name: Send slack notification on failure
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": ":x::merge-on-fire::nomad-sob: Nomad OSS->ENT merge *FAILED*",
              "attachments": [
                {
                  "color": "#C41E3A",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Reason:*\n${{ needs.merge-oss.outputs.reason }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Origin branch:*\n<https://github.com/hashicorp/nomad/tree/${{ inputs.origin_branch }}|${{ inputs.origin_branch }}>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Destination branch:*\n<https://github.com/hashicorp/nomad-enterprise/tree/${{ inputs.dest_branch }}|${{ inputs.dest_branch }}>"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow:*\n${{ github.workflow }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_id }}>"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.NOMAD_MERGE_OSS_SLACK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
