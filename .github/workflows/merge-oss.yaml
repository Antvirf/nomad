name: Merge OSS to ENT
on:
  # Allow this Action to be triggered by other Actions.
  workflow_call:
    inputs:
      origin_branch:
        description: 'The source OSS branch'
        type: string
        required: true
      dest_branch:
        description: 'The destination ENT branch'
        type: string
        required: true
    secrets:
      NOMAD_MERGE_OSS_GH_PAT:
        description: 'The GitHub Personal Access Token to use for the merge commit'
        required: true
      NOMAD_MERGE_OSS_SLACK:
        description: 'The Slack app incoming webhook URL to use for notification'
        required: true
env:
  GO_VERSION: 1.17.7
  GOPRIVATE: github.com/hashicorp
  GITHUB_USER: hc-github-team-nomad-core
jobs:
  merge-oss:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    outputs:
      reason: ${{ steps.merge.outputs.reason }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{secrets.NOMAD_MERGE_OSS_GH_PAT}}
      - uses: magnetikonline/action-golang-cache@v1
        with:
          go-version: ${{env.GO_VERSION}}
          cache-key-suffix: -merge-oss
      - name: Configure Git
        run: |
          git config --global url.'https://${{secrets.NOMAD_MERGE_OSS_GH_PAT}}:@github.com'.insteadOf 'https://github.com'
          git config --global user.email "github-team-nomad-core@hashicorp.com"
          git config --global user.name "@${{env.GITHUB_USER}}"
      - name: Install Dependencies
        run: |
          make deps lint-deps
      - name: Run Script
        id: merge
        run: |
          set -xeuo pipefail

          # Get branch names
          origin_branch="${{ inputs.origin_branch }}"
          dest_branch="${{ inputs.dest_branch }}"
          tmp_branch="ci/oss-merge-${origin_branch}-$(date -u +%Y%m%d%H%M%S)"

          # Protect against dest_branch being different from current branch
          git checkout "${dest_branch}"
          git pull

          # Run the merge script
          if ! ./scripts/enterprise/merge-oss.sh "${origin_branch}" "${dest_branch}" "${tmp_branch}" ; then
            echo "git was unable to auto-merge"
            echo "::set-output name=reason::git was unable to auto-merge"
            exit 1
          fi

          # Spot check by doing make check
          if ! make check ; then
            echo "make check failed after auto-merge"
            echo "::set-output name=reason::make check failed after auto-merge"
            exit 1
          fi

          # Spot check by doing compile
          if ! make pkg/linux_amd64/nomad ; then
            echo "compilation failed after auto-merge"
            echo "::set-output name=reason::compilation failed after auto-merge"
            exit 1
          fi

          # Finally merge
          git checkout "${dest_branch}"
          git merge "${tmp_branch}"

          # And then push
          if ! git push origin "${dest_branch}" ; then
            echo "push to origin failed"
            echo "::set-output name=reason::push to origin failed"
            exit 1
          fi

          # Say goodbye
          echo "Complete!!"
          exit 0
  slack-notify:
    needs:
      - merge-oss
    if: always() && needs.merge-oss.result == 'failure'
    runs-on: ubuntu-20.04
    steps:
      - name: Send slack notification on failure
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": ":alert: Nomad OSS merge *FAILED* because ${{ needs.merge-oss.outputs.reason }} :alert:",
              "attachments": [
                {
                  "color": "#C41E3A",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Origin branch: `${{ inputs.origin_branch }}`\nDestination branch: `${{ inputs.dest_branch }}`\nWorkflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.NOMAD_MERGE_OSS_SLACK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
